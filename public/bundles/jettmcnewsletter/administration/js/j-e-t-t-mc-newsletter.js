(this.webpackJsonp=this.webpackJsonp||[]).push([["j-e-t-t-mc-newsletter"],{Bt0p:function(e){e.exports=JSON.parse('{"jett-mc-newsletter":{"general":{"mainMenuItemGeneral":"JETT Mailchimp Newsletter"},"module":{"title":"JETT Mailchimp Newsletter","description":"Manage settings for JETT Mailchimp Newsletter"},"settings":{"fields":{"active":{"label":"Active"},"api_key":"API Key","lists":"Lists","sync_limit":{"label":"Sync Limit","tooltip":"Determines how many e-mail addresses should be transferred to Mailchimp with one synchronization run."},"advanced_settings":{"label":"Show advanced settings","sync_date":{"label":"Sync Date","tooltip":"Specifies the date from which newsletter subscribers should be synchronized"},"double_optin":{"label":"Double Opt-In","tooltip":"Determines whether the double optin process should take place via Shopware or Mailchimp"}}},"buttons":{"get_lists":"Get lists","clear_lists":{"label":"Reset","tooltip":"Resets the API key, the selected list and the synchronization date."},"save":"Save"},"titles":{"log":"Log","setup":"Setup","settings":"Settings","advanced_settings":"Advanced Settings"},"tooltips":{"save":"Save settings"},"status":{"saveSuccess":{"title":"Success","message":"The settings have been saved successfully."},"getSuccess":{"title":"Success","message":"The lists were successfully loaded from Mailchimp."}},"log":{"table":{"label":{"createdAt":"Created at","salesChannel":"Sales Channel","status":"Status","message":"Message"}}}}}}')},FAxO:function(e,t,s){},GUXU:function(e,t,s){var n=s("FAxO");"string"==typeof n&&(n=[[e.i,n,""]]),n.locals&&(e.exports=n.locals);(0,s("SZ7m").default)("311a56f6",n,!0,{})},UihK:function(e){e.exports=JSON.parse('{"jett-mc-newsletter":{"general":{"mainMenuItemGeneral":"JETT Mailchimp Newsletter"},"module":{"title":"JETT Mailchimp Newsletter","description":"Verwalte Einstellungen für JETT Mailchimp Newsletter"},"settings":{"fields":{"active":{"label":"Aktiv"},"api_key":"API Schlüssel","lists":"Listen","sync_limit":{"label":"Synchronisationslimit","tooltip":"Legt fest, wie viele E-Mail Adressen mit einem Synchronisierungslauf zu Mailchimp übertragen werden sollen."},"advanced_settings":{"label":"Erweiterte Einstellungen anzeigen","sync_date":{"label":"Synchronisationsdatum","tooltip":"Legt das Datum fest, ab dem Newsletter Abonnenten synchronisiert werden sollen."},"double_optin":{"label":"Double Opt-In","tooltip":"Legt fest, ob der Double Optin Prozess über Shopware oder über Mailchimp erfolgen soll."}}},"buttons":{"get_lists":"Listen abrufen","clear_lists":{"label":"Zurücksetzen","tooltip":"Setzt den API Key, die ausgewählte Liste und das Synchronisierungsdatum zurück."},"save":"Speichern"},"titles":{"log":"Protokoll","setup":"Einstellungen","settings":"Einstellungen","advanced_settings":"Erweiterte Einstellungen"},"tooltips":{"save":"Einstellungen speichern"},"status":{"saveSuccess":{"title":"Erfolgreich","message":"Die Einstellungen wurden erfolgreich gespeichert."},"getSuccess":{"title":"Erfolgreich","message":"Die Listen wurden erfolgreich von Mailchimp geladen."}},"log":{"table":{"label":{"createdAt":"Erstellt am","salesChannel":"Sales Channel","status":"Status","message":"Nachricht"}}}}}}')},a6Zv:function(e,t){e.exports='{% block jett_newsletter_settings %}\n    <sw-page class="jett-newsletter-settings">\n\n        <template slot="smart-bar-actions">\n            <sw-button-process\n                    class="sw-settings-customer-group-detail__save"\n                    :isLoading="isLoading"\n                    v-model="isSaveSuccessful"\n                    :disabled="isLoading || selectedList < 1"\n                    variant="primary"\n                    v-tooltip.bottom="$tc(\'jett-mc-newsletter.settings.tooltip.save\')"\n                    @click="onSave"\n            >\n                {{ $tc(\'jett-mc-newsletter.settings.buttons.save\') }}\n            </sw-button-process>\n        </template>\n\n        <template slot="content">\n            <sw-card-view>\n                <template class="jett-newsletter-settings__content">\n                    <sw-tabs :isSmall="false" defaultItem="settings">\n                        <template slot-scope="{ active }" >\n                            <sw-tabs-item\n                                name="settings"\n                                :activeTab="active"\n                                :native="true"\n                            >\n                                {{ $tc(\'jett-mc-newsletter.settings.titles.settings\') }}\n                            </sw-tabs-item>\n                            <sw-tabs-item\n                                name="log"\n                                :activeTab="active"\n                                :native="true"\n                                @click="getLogs"\n                            >\n                                {{ $tc(\'jett-mc-newsletter.settings.titles.log\') }}\n                            </sw-tabs-item>\n                        </template>\n\n                        <template slot="content" slot-scope="{ active }">\n                            <sw-card v-if="active === \'settings\'" :isLoading="getListsIsLoading">\n                                <template slot="title">\n                                    <div class="sw-card__title">\n                                        {{ $tc(\'jett-mc-newsletter.settings.titles.setup\') }}\n                                    </div>\n                                </template>\n\n                                <template slot="toolbar">\n                                    <sw-sales-channel-switch\n                                            :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                            @change-sales-channel-id="onSalesChannelChanged"\n                                    >\n                                    </sw-sales-channel-switch>\n                                </template>\n\n                                <template slot="default">\n                                    <sw-switch-field\n                                            :label="$tc(\'jett-mc-newsletter.settings.fields.active.label\')"\n                                            v-model="isActive">\n                                    </sw-switch-field>\n\n                                    <div style="display: grid; grid-template-columns: 60% 20% 20%; align-items: center; justify-items: center;">\n\n                                        <sw-password-field\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.api_key\')"\n                                                v-model="apiKey"\n                                                placeholder="API Key"\n                                                type="password"\n                                                :disabled="apiKey && selectedList"\n                                        ></sw-password-field>\n\n                                        <sw-button-process\n                                                @click="getLists"\n                                                :disabled="!apiKey"\n                                                variant="primary"\n                                                size="small"\n                                                :square="false"\n                                                :block="false"\n                                                :isLoading="getListsIsLoading"\n                                                :disabled="apiKey && selectedList"\n                                                style="justify-content: center; align-items: center; display: flex; width: 110px; height: 40px; margin-left: 5%;"\n                                        >\n                                            <sw-icon small name="default-action-circle-download" color="#fff"></sw-icon>\n                                            {{ $tc(\'jett-mc-newsletter.settings.buttons.get_lists\') }}\n                                        </sw-button-process>\n\n                                        <sw-button-process\n                                            @click="clearKeyAndList"\n                                            :disabled="!apiKey"\n                                            :square="false"\n                                            :block="false"\n                                            size="small"\n                                            variant="ghost"\n                                            v-tooltip.top="$tc(\'jett-mc-newsletter.settings.buttons.clear_lists.tooltip\')"\n                                            style="justify-content: center; align-items: center; display: flex; width: 110px; height: 40px; margin-left: 5%;"\n                                        >\n                                            <sw-icon small name="text-editor-undo" color="#189eff"></sw-icon>\n                                            {{ $tc(\'jett-mc-newsletter.settings.buttons.clear_lists.label\') }}\n                                        </sw-button-process>\n                                    </div>\n\n                                    <sw-select-field\n                                            v-if="lists.total > 0 || selectedList"\n                                            :placeholder="$tc(\'jett-mc-newsletter.settings.fields.lists\')"\n                                            :label="$tc(\'jett-mc-newsletter.settings.fields.lists\')"\n                                            v-model="selectedList"\n                                            :disabled="apiKey && selectedList"\n                                    >\n                                        <option v-for="list in lists.items"\n                                                :key="list.id"\n                                                :value="list.id">\n                                            {{ list.name }}\n                                        </option>\n                                    </sw-select-field>\n\n                                    <sw-switch-field\n                                        :label="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.label\')"\n                                        v-model="showAdvancedSettings"\n                                    >\n                                    </sw-switch-field>\n\n                                    <sw-card\n                                        v-if="showAdvancedSettings"\n                                        :title="$tc(\'jett-mc-newsletter.settings.titles.advanced_settings\')"\n                                    >\n                                        <template slot="toolbar">\n                                            {{ $tc(\'jett-mc-newsletter.settings.titles.advanced_settings\') }}\n                                        </template>\n                                        <template slot="default">\n                                            <sw-number-field\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.sync_limit.label\')"\n                                                :helpText="$tc(\'jett-mc-newsletter.settings.fields.sync_limit.tooltip\')"\n                                                numberType="int"\n                                                :step="10"\n                                                v-model="syncLimit"\n                                                :digits="2"\n                                            >\n                                            </sw-number-field>\n\n                                            <sw-datepicker\n                                                :label="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.sync_date.label\')"\n                                                dateType="datetime-local"\n                                                v-model="lastSyncRun"\n                                                :helpText="$tc(\'jett-mc-newsletter.settings.fields.advanced_settings.sync_date.tooltip\')"\n                                            >\n                                            </sw-datepicker>\n                                        </template>\n                                    </sw-card>\n                                </template>\n                            </sw-card>\n                            <sw-card\n                                v-if="active === \'log\'"\n                                :isLoading="getLogsIsLoading"\n                            >\n                                <template slot="title">\n                                    <div class="sw-card__title">\n                                        {{ $tc(\'jett-mc-newsletter.settings.titles.log\') }}\n                                    </div>\n                                </template>\n\n                                <template slot="toolbar">\n                                    <sw-sales-channel-switch\n                                        :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                        @change-sales-channel-id="onSalesChannelChanged">\n                                    </sw-sales-channel-switch>\n                                </template>\n                                <template slot="default">\n                                    <sw-data-grid\n                                        :showSelection="false"\n                                        :dataSource="logs"\n                                        :showActions="false"\n                                        :columns="[\n                                             { property: \'createdAt\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.createdAt\'), rawData: true },\n                                             { property: \'salesChannelId\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.salesChannel\'), rawData: true },\n                                             { property: \'status\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.status\'), rawData: true },\n                                             { property: \'message\', label: $tc(\'jett-mc-newsletter.settings.log.table.label.message\'), rawData: true },\n                                        ]">\n                                        <template #column-createdAt="{ item }">\n                                            {{ item.createdAt | date({hour: \'numeric\', minute: \'numeric\', second: \'numeric\'})\n                                            }}\n                                        </template>\n                                        <template #column-salesChannelId="{ item }">\n                                            <span v-if="item.payload && item.payload.salesChannel">{{ item.payload.salesChannel }}</span>\n                                            <span v-else>{{ item.salesChannelId }}</span>\n                                        </template>\n                                        <template #column-status="{ item }">\n                                            <sw-icon v-if="item.status"\n                                                     name="small-default-checkmark-circle"\n                                                     size="16"\n                                                     color="#1abc9c"\n                                            >\n                                            </sw-icon>\n                                            <sw-icon v-if="!item.status"\n                                                     name="small-default-x-circle"\n                                                     size="16"\n                                                     color="#fc427b"\n                                            >\n                                            </sw-icon>\n                                        </template>\n                                        <template #column-message="{ item }">\n                                            <span>{{ item.message }}</span>\n                                            <sw-help-text\n                                                class="jett-newsletter-log__payload"\n                                                :text="(item.payload.email ? item.payload.email : item.payload.message)"\n                                            ></sw-help-text>\n                                        </template>\n                                        <template slot="pagination">\n                                            <sw-pagination\n                                                :total="logsTotal"\n                                                :limit="logsLimit"\n                                                :page="logsPage"\n                                                @page-change="onLogPageChange"\n                                                :autoHide="false"\n                                                :steps="[25]"\n                                                :total-visible="25"\n                                            ></sw-pagination>\n                                        </template>\n                                    </sw-data-grid>\n                                </template>\n                            </sw-card>\n                        </template>\n                    </sw-tabs>\n                </template>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n'},kvmX:function(e,t,s){"use strict";s.r(t);var n=s("UihK"),i=s("Bt0p");s("GUXU");Shopware.Module.register("jett-newsletter",{type:"plugin",name:"jett-mc-newsletter.module.title",title:"jett-mc-newsletter.module.title",description:"jett-mc-newsletter.module.description",color:"#ff3d58",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":n,"en-GB":i},routes:{settings:{component:"jett-newsletter-settings",path:"settings"}},navigation:[{label:"jett-mc-newsletter.general.mainMenuItemGeneral",color:"#ff3d58",path:"jett.newsletter.settings",icon:"default-shopping-paper-bag-product",parent:"sw-marketing"}]});var l=s("a6Zv"),a=s.n(l);const{Mixin:c}=Shopware;Shopware.Component.register("jett-newsletter-settings",{template:a.a,inject:["JettMcApiService"],mixins:[c.getByName("notification")],data:()=>({getListsIsLoading:!1,apiKey:null,isLoading:!1,isSaveSuccessful:!1,syncLimit:30,salesChannelId:null,isActive:!1,lists:[],selectedList:null,settingId:null,lastSyncRun:null,getLogsIsLoading:!1,logs:[],logsTotal:0,logsPage:1,logsLimit:25,showAdvancedSettings:!1,doubleOptinValues:[{id:0,label:"Shopware"},{id:1,label:"Mailchimp"}],selectedDoubleOptinOption:0}),mounted(){this.getSettings()},methods:{onSalesChannelChanged(e){this.salesChannelId=e,this.getSettings(),this.getLogs()},onLogPageChange(e){this.logsPage=e.page,this.getLogs()},getSettings(){this.JettMcApiService.getSettings({salesChannelId:this.salesChannelId}).then(e=>{e.apiKey&&(this.apiKey=e.apiKey),e.listId&&(this.selectedList=e.listId),e.id&&(this.settingId=e.id),e.syncLimit&&(this.syncLimit=e.syncLimit),e.salesChannelId&&(this.salesChannelId=e.salesChannelId),e.active&&(this.isActive=e.active),e.lastSyncRun&&(this.lastSyncRun=e.lastSyncRun),e.doiOption&&(this.selectedDoubleOptinOption=e.doiOption),this.selectedList&&this.getLists()}).catch(e=>{this.showErrorMessage(e)}).finally(()=>{})},getLogs(){this.getLogsIsLoading=!0,this.JettMcApiService.getLogs({salesChannelId:this.salesChannelId,page:this.logsPage,limit:this.logsLimit}).then(e=>{this.logs=Object.values(e.elements),this.logs.map(e=>{e.payload=JSON.parse(e.payload)}),this.logsTotal=e.total}).catch(e=>{this.showErrorMessage(e)}).finally(()=>{this.getLogsIsLoading=!1})},onSave(){this.isLoading=!0,this.JettMcApiService.save({settingId:this.settingId,salesChannelId:this.salesChannelId,active:this.isActive,apiKey:this.apiKey,listId:this.selectedList,syncLimit:this.syncLimit,lastSyncRun:this.lastSyncRun,doiOption:this.selectedDoubleOptinOption}).then(()=>{this.createNotificationSuccess({title:this.$tc("jett-mc-newsletter.settings.status.saveSuccess.title"),message:this.$tc("jett-mc-newsletter.settings.status.saveSuccess.message")})}).catch(e=>{this.showErrorMessage(e)}).finally(()=>{this.isLoading=!1})},getLists(){this.getListsIsLoading=!0,this.JettMcApiService.getLists({apiKey:this.apiKey}).then(e=>{this.lists=e,this.createNotificationSuccess({title:this.$tc("jett-mc-newsletter.settings.status.getSuccess.title"),message:this.$tc("jett-mc-newsletter.settings.status.getSuccess.message")})}).catch(e=>{this.showErrorMessage(e)}).finally(()=>{this.getListsIsLoading=!1})},getList(){this.getListsIsLoading=!0,this.JettMcApiService.getList({apiKey:this.apiKey,listId:this.selectedList}).then(e=>{this.lists=e,this.createNotificationSuccess({title:this.$tc("jett-mc-newsletter.settings.status.getSuccess.title"),message:this.$tc("jett-mc-newsletter.settings.status.getSuccess.message")})}).catch(e=>{this.showErrorMessage(e)}).finally(()=>{this.getListsIsLoading=!1})},clearKeyAndList(){this.apiKey=null,this.selectedList=null,this.lastSyncRun=null},showErrorMessage(e){var t=e.response.data.message?e.response.data.message:e.message;this.createNotificationError({title:e.title,message:t,autoClose:!1})}}});const o=Shopware.Classes.ApiService;var r=class extends o{constructor(e,t,s="jettmcnewsletter"){super(e,t,s)}getLists(e){const t=this.getApiBasePath()+"/get-lists";return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then(e=>o.handleResponse(e))}getList(e){const t=this.getApiBasePath()+"/get-list";return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then(e=>o.handleResponse(e))}getLogs(e){const t=this.getApiBasePath()+"/get-logs";return this.httpClient.get(t,{params:e,headers:this.getBasicHeaders()}).then(e=>o.handleResponse(e))}save(e){const t=this.getApiBasePath()+"/save-setting";return this.httpClient.post(t,{params:e},{headers:this.getBasicHeaders()}).then(e=>o.handleResponse(e))}getSettings(e){const t=this.getApiBasePath()+"/get-settings";return this.httpClient.get(t,{params:e,headers:this.getBasicHeaders()}).then(e=>o.handleResponse(e))}};const{Application:g}=Shopware;g.addServiceProvider("JettMcApiService",e=>{const t=g.getContainer("init");return new r(t.httpClient,e.loginService)})}},[["kvmX","runtime","vendors-node"]]]);